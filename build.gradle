plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // data jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // thymeleaf 현재는 사용하지 않음.
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    // p6spy, jpa query string 드러남
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    // ObjectMapper 이용
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    implementation 'com.querydsl:querydsl-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB

    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    // jwt 관련 의존성 https://github.com/jwtk/jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'

    // 클라우드 관련 모듈
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.0.1.RELEASE'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2',
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            //'org.bouncycastle:bcprov-jdk15on:1.60',
            'io.jsonwebtoken:jjwt-jackson:0.11.2' // or 'io.jsonwebtoken:jjwt-gson:0.11.2' for gson

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.199'
    testImplementation 'org.mockito:mockito-core'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝